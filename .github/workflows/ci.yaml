# matrix v2
on: [push,pull_request]
env:
  RUSTFLAGS: "-D warnings"

jobs:
  ci:
    name: Build (${{ matrix.os }} ${{ matrix.channel }} ${{ matrix.target }} ${{ matrix.features }})

    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        channel: [""]
        features: [""]
        target: [""]
        os: [ubuntu-latest]
        
        include:
          # only linux build contains wasm32 build
          - channel: "+nightly"
            target: "wasm32-unknown-unknown"
            os: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4

      - name: Cache target
        uses: actions/cache@v4
        with:
          key: target-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.features }}-${{ hashFiles('**/Cargo.lock') }}
          path: "target"
          restore-keys: |
            target-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.features }}-
            target-${{ matrix.os }}-${{ matrix.target }}-
            target-${{ matrix.os }}-

      # Compute reusable args once
      - name: Compute cargo args
        id: args
        shell: bash
        env:
          FEATURE_FLAGS: ${{ matrix.features }}
          TARGET: ${{ matrix.target }}
        run: |
          set -euo pipefail
          FEATURES_ARG=""
          TARGET_ARG=""
          if [ -n "${FEATURE_FLAGS}" ]; then
            FEATURES_ARG="--features=${FEATURE_FLAGS}"
          fi
          if [ -n "${TARGET}" ]; then
            TARGET_ARG="--target=${TARGET}"
          fi
          echo "features=${FEATURES_ARG}" >> "$GITHUB_OUTPUT"
          echo "target=${TARGET_ARG}"   >> "$GITHUB_OUTPUT"

      - name: Github rust fix
        if: runner.os == 'Linux' && !(env.GITEA_ACTIONS == 'true')
        run: |
          # at the moment, GitHub is too far behind mainline rust (v1.89.0-v1.91.0-nightly)
          rustup update
          # if nightly
            if [ "${{ matrix.channel }}" == "+nightly" ]; then
                rustup +nightly component add rustfmt clippy
                # if nightly and wasm32 target
                if [ "${{ matrix.target }}" == "wasm32-unknown-unknown" ];
                then
                  rustup +nightly target add wasm32-unknown-unknown
                fi
            fi

          

      - name: rustfmt
        run: cargo ${{ matrix.channel }} fmt --check

      - name: cargo check
        run: cargo ${{ matrix.channel }} check ${{ steps.args.outputs.features }} ${{ steps.args.outputs.target }}

      - name: clippy
        run: cargo ${{ matrix.channel }} clippy --no-deps ${{ steps.args.outputs.features }} ${{ steps.args.outputs.target }}

      - name: docs
        run: cargo ${{ matrix.channel }} doc ${{ steps.args.outputs.features }} ${{ steps.args.outputs.target }}

      - name: tests
        run: cargo ${{ matrix.channel }} test ${{ steps.args.outputs.features }} ${{ steps.args.outputs.target }}